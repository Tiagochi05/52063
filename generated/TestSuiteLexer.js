// Generated from c:/yo/AnalizadorTestSuite/TestSuite.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,25,184,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,1,1,1,1,2,1,
2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,
14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,
1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,
17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,5,19,144,8,19,10,19,12,19,
147,9,19,1,20,4,20,150,8,20,11,20,12,20,151,1,21,1,21,5,21,156,8,21,10,21,
12,21,159,9,21,1,21,1,21,1,22,4,22,164,8,22,11,22,12,22,165,1,23,3,23,169,
8,23,1,23,4,23,172,8,23,11,23,12,23,173,1,23,1,23,1,24,4,24,179,8,24,11,
24,12,24,180,1,24,1,24,0,0,25,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
22,45,23,47,24,49,25,1,0,6,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,
97,122,1,0,48,57,3,0,10,10,13,13,34,34,2,0,87,87,118,119,2,0,9,9,32,32,190,
0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,
35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
0,0,0,47,1,0,0,0,0,49,1,0,0,0,1,51,1,0,0,0,3,53,1,0,0,0,5,55,1,0,0,0,7,57,
1,0,0,0,9,59,1,0,0,0,11,61,1,0,0,0,13,63,1,0,0,0,15,65,1,0,0,0,17,67,1,0,
0,0,19,74,1,0,0,0,21,79,1,0,0,0,23,86,1,0,0,0,25,95,1,0,0,0,27,98,1,0,0,
0,29,104,1,0,0,0,31,113,1,0,0,0,33,120,1,0,0,0,35,125,1,0,0,0,37,135,1,0,
0,0,39,141,1,0,0,0,41,149,1,0,0,0,43,153,1,0,0,0,45,163,1,0,0,0,47,171,1,
0,0,0,49,178,1,0,0,0,51,52,5,123,0,0,52,2,1,0,0,0,53,54,5,125,0,0,54,4,1,
0,0,0,55,56,5,121,0,0,56,6,1,0,0,0,57,58,5,46,0,0,58,8,1,0,0,0,59,60,5,91,
0,0,60,10,1,0,0,0,61,62,5,44,0,0,62,12,1,0,0,0,63,64,5,93,0,0,64,14,1,0,
0,0,65,66,5,36,0,0,66,16,1,0,0,0,67,68,5,112,0,0,68,69,5,114,0,0,69,70,5,
117,0,0,70,71,5,101,0,0,71,72,5,98,0,0,72,73,5,97,0,0,73,18,1,0,0,0,74,75,
5,100,0,0,75,76,5,97,0,0,76,77,5,100,0,0,77,78,5,111,0,0,78,20,1,0,0,0,79,
80,5,99,0,0,80,81,5,117,0,0,81,82,5,97,0,0,82,83,5,110,0,0,83,84,5,100,0,
0,84,85,5,111,0,0,85,22,1,0,0,0,86,87,5,101,0,0,87,88,5,110,0,0,88,89,5,
116,0,0,89,90,5,111,0,0,90,91,5,110,0,0,91,92,5,99,0,0,92,93,5,101,0,0,93,
94,5,115,0,0,94,24,1,0,0,0,95,96,5,101,0,0,96,97,5,115,0,0,97,26,1,0,0,0,
98,99,5,110,0,0,99,100,5,111,0,0,100,101,5,32,0,0,101,102,5,101,0,0,102,
103,5,115,0,0,103,28,1,0,0,0,104,105,5,99,0,0,105,106,5,111,0,0,106,107,
5,110,0,0,107,108,5,116,0,0,108,109,5,105,0,0,109,110,5,101,0,0,110,111,
5,110,0,0,111,112,5,101,0,0,112,30,1,0,0,0,113,114,5,101,0,0,114,115,5,120,
0,0,115,116,5,105,0,0,116,117,5,115,0,0,117,118,5,116,0,0,118,119,5,101,
0,0,119,32,1,0,0,0,120,121,5,100,0,0,121,122,5,101,0,0,122,123,5,98,0,0,
123,124,5,101,0,0,124,34,1,0,0,0,125,126,5,118,0,0,126,127,5,101,0,0,127,
128,5,114,0,0,128,129,5,100,0,0,129,130,5,97,0,0,130,131,5,100,0,0,131,132,
5,101,0,0,132,133,5,114,0,0,133,134,5,111,0,0,134,36,1,0,0,0,135,136,5,102,
0,0,136,137,5,97,0,0,137,138,5,108,0,0,138,139,5,115,0,0,139,140,5,111,0,
0,140,38,1,0,0,0,141,145,7,0,0,0,142,144,7,1,0,0,143,142,1,0,0,0,144,147,
1,0,0,0,145,143,1,0,0,0,145,146,1,0,0,0,146,40,1,0,0,0,147,145,1,0,0,0,148,
150,7,2,0,0,149,148,1,0,0,0,150,151,1,0,0,0,151,149,1,0,0,0,151,152,1,0,
0,0,152,42,1,0,0,0,153,157,5,34,0,0,154,156,8,3,0,0,155,154,1,0,0,0,156,
159,1,0,0,0,157,155,1,0,0,0,157,158,1,0,0,0,158,160,1,0,0,0,159,157,1,0,
0,0,160,161,5,34,0,0,161,44,1,0,0,0,162,164,7,4,0,0,163,162,1,0,0,0,164,
165,1,0,0,0,165,163,1,0,0,0,165,166,1,0,0,0,166,46,1,0,0,0,167,169,5,13,
0,0,168,167,1,0,0,0,168,169,1,0,0,0,169,170,1,0,0,0,170,172,5,10,0,0,171,
168,1,0,0,0,172,173,1,0,0,0,173,171,1,0,0,0,173,174,1,0,0,0,174,175,1,0,
0,0,175,176,6,23,0,0,176,48,1,0,0,0,177,179,7,5,0,0,178,177,1,0,0,0,179,
180,1,0,0,0,180,178,1,0,0,0,180,181,1,0,0,0,181,182,1,0,0,0,182,183,6,24,
0,0,183,50,1,0,0,0,8,0,145,151,157,165,168,173,180,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class TestSuiteLexer extends antlr4.Lexer {

    static grammarFileName = "TestSuite.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'{'", "'}'", "'y'", "'.'", "'['", "','", 
                         "']'", "'$'", "'prueba'", "'dado'", "'cuando'", 
                         "'entonces'", "'es'", "'no es'", "'contiene'", 
                         "'existe'", "'debe'", "'verdadero'", "'falso'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, "PRUEBA", "DADO", "CUANDO", "ENTONCES", 
                          "ES", "NO_ES", "CONTIENE", "EXISTE", "DEBE", "VERDADERO", 
                          "FALSO", "ID", "DIGITS", "STRING", "TEXTO_SIMPLE", 
                          "NEWLINE", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "PRUEBA", "DADO", "CUANDO", "ENTONCES", "ES", 
                      "NO_ES", "CONTIENE", "EXISTE", "DEBE", "VERDADERO", 
                      "FALSO", "ID", "DIGITS", "STRING", "TEXTO_SIMPLE", 
                      "NEWLINE", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

TestSuiteLexer.EOF = antlr4.Token.EOF;
TestSuiteLexer.T__0 = 1;
TestSuiteLexer.T__1 = 2;
TestSuiteLexer.T__2 = 3;
TestSuiteLexer.T__3 = 4;
TestSuiteLexer.T__4 = 5;
TestSuiteLexer.T__5 = 6;
TestSuiteLexer.T__6 = 7;
TestSuiteLexer.T__7 = 8;
TestSuiteLexer.PRUEBA = 9;
TestSuiteLexer.DADO = 10;
TestSuiteLexer.CUANDO = 11;
TestSuiteLexer.ENTONCES = 12;
TestSuiteLexer.ES = 13;
TestSuiteLexer.NO_ES = 14;
TestSuiteLexer.CONTIENE = 15;
TestSuiteLexer.EXISTE = 16;
TestSuiteLexer.DEBE = 17;
TestSuiteLexer.VERDADERO = 18;
TestSuiteLexer.FALSO = 19;
TestSuiteLexer.ID = 20;
TestSuiteLexer.DIGITS = 21;
TestSuiteLexer.STRING = 22;
TestSuiteLexer.TEXTO_SIMPLE = 23;
TestSuiteLexer.NEWLINE = 24;
TestSuiteLexer.WS = 25;



